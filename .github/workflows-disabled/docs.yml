name: Documentation

on:
  push:
    branches: [main, feature/docs-automation]
    paths:
      - 'src/writeit/**'
      - 'docs/**'
      - 'templates/**'
      - 'pyproject.toml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/writeit/**'
      - 'docs/**'
      - 'templates/**'
      - 'pyproject.toml'
  schedule:
    # Run weekly to check for broken links
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deploy to GitHub Pages'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    
    outputs:
      docs-changed: ${{ steps.check-changes.outputs.docs-changed }}
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Generate documentation
        run: |
          uv run writeit docs generate \
            --output docs/generated \
            --format markdown \
            --format html \
            --validate \
            --verbose

      - name: Check for documentation changes
        id: check-changes
        run: |
          if git diff --quiet HEAD^ HEAD -- docs/ src/writeit/; then
            echo "docs-changed=false" >> $GITHUB_OUTPUT
          else
            echo "docs-changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload generated documentation
        uses: actions/upload-artifact@v4
        with:
          name: generated-docs
          path: docs/generated/
          retention-days: 30

      - name: Upload HTML site for deployment
        if: github.ref == 'refs/heads/main' || github.event.inputs.force_deploy == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/generated/site/

  validate-docs:
    runs-on: ubuntu-latest
    needs: generate-docs
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Download generated documentation
        uses: actions/download-artifact@v4
        with:
          name: generated-docs
          path: docs/generated/

      - name: Validate documentation
        run: |
          uv run writeit docs validate \
            --docs-path docs/generated/markdown \
            --detailed \
            --fix

      - name: Check documentation metrics
        run: |
          uv run writeit docs metrics \
            --docs-path docs/generated/markdown

      - name: Validate links (allow failures)
        continue-on-error: true
        run: |
          echo "üîó Validating external links..."
          # This might fail due to network issues, so we allow it to continue
          uv run python -c "
          from writeit.docs import DocumentationGenerator, DocumentationValidator
          generator = DocumentationGenerator()
          docs = generator.generate_all()
          validator = DocumentationValidator()
          results = validator.validate_all(docs)
          print(f'Links checked: {len(results.warnings)} warnings, {len(results.errors)} errors')
          if results.has_errors:
              for error in results.errors:
                  print(f'‚ùå {error.type}: {error.message}')
          print('Link validation completed (failures allowed)')
          "

  test-docs-generation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run documentation tests
        run: |
          uv run pytest tests/documentation/ -v \
            --cov=src/writeit/docs \
            --cov-report=xml \
            --cov-report=term

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: documentation
          name: docs-tests

  generate-pdf:
    runs-on: ubuntu-latest
    needs: generate-docs
    if: github.ref == 'refs/heads/main' || github.event.inputs.force_deploy == 'true'
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies for PDF generation
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2-dev \
            libpango1.0-dev \
            libgdk-pixbuf2.0-dev \
            libffi-dev \
            shared-mime-info

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Generate PDF documentation
        run: |
          uv run writeit docs generate \
            --output docs/pdf-output \
            --format pdf \
            --verbose

      - name: Upload PDF documentation
        uses: actions/upload-artifact@v4
        with:
          name: writeit-documentation-pdf
          path: docs/pdf-output/writeit-documentation.pdf
          retention-days: 90

  deploy-docs:
    runs-on: ubuntu-latest
    needs: [generate-docs, validate-docs]
    if: |
      github.ref == 'refs/heads/main' && 
      (needs.generate-docs.outputs.docs-changed == 'true' || github.event.inputs.force_deploy == 'true')
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  update-docs-index:
    runs-on: ubuntu-latest
    needs: deploy-docs
    if: success()
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update documentation index
        run: |
          # Update README with documentation links
          DOCS_URL="${{ steps.deployment.outputs.page_url }}"
          DATE=$(date -u +"%Y-%m-%d %H:%M UTC")
          
          # Create/update documentation badge
          echo "üìö [**View Documentation**](${DOCS_URL}) | Last updated: ${DATE}" > docs/STATUS.md
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if ! git diff --quiet; then
            git add docs/STATUS.md
            git commit -m "docs: Update documentation status [skip ci]"
            git push
          fi

  notify-slack:
    runs-on: ubuntu-latest
    needs: [deploy-docs, generate-pdf]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
      - name: Notify Slack on success
        if: needs.deploy-docs.result == 'success'
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: |
            üìö WriteIt documentation successfully updated!
            üîó View at: ${{ needs.deploy-docs.outputs.page_url }}
            üìÑ PDF available in artifacts
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: |
            ‚ùå WriteIt documentation deployment failed
            Please check the workflow logs for details
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}